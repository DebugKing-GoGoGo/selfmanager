<beans xmlns="http://www.springframework.org/schema/beans"  
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
	xmlns:aop="http://www.springframework.org/schema/aop"  
	xmlns:tx="http://www.springframework.org/schema/tx"  
	xmlns:context="http://www.springframework.org/schema/context"  
	xsi:schemaLocation="  
	    http://www.springframework.org/schema/beans 
	    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	    http://www.springframework.org/schema/mvc
	    http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd    
	    http://www.springframework.org/schema/aop 
	    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd  
	    http://www.springframework.org/schema/tx 
	    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd  
	    http://www.springframework.org/schema/context 
	    http://www.springframework.org/schema/context/spring-context-3.2.xsd">  

<!-- 事务管理器 
	对mabatis操作数据库的事务控制，spring使用jdbc的事务控制类
-->
<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	<!-- 我们通过数据源操作数据库，所以在这里要配置数据源 
		dataSource就是在applicationContext-dao.xml中配置的那个
	-->
	<property name="dataSource" ref="dataSource"></property>
</bean>

<!-- 通知 -->
<tx:advice id="txAdvice" transaction-manager="transactionManager">
	<tx:attributes>
		<!-- 传播行为，把方法前缀，有助于规范程序员编码 -->
		<!-- REQUIRED:需要事务控制 -->
		<tx:method name="save*" propagation="REQUIRED" rollback-for="java.lang.Exception"/> 
		<tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception"/> 
		<tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
		<tx:method name="insert*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
		<!-- SUPPORTS:支持事务控制，你有我就支持，你没有就算了 -->
		<tx:method name="get*" propagation="SUPPORTS" read-only="true" rollback-for="java.lang.Exception"/>
		<tx:method name="find*" propagation="SUPPORTS" read-only="true" rollback-for="java.lang.Exception"/>
		<tx:method name="select*" propagation="SUPPORTS" read-only="true" rollback-for="java.lang.Exception"/>
		<!-- 其他的也是support -->
		<!-- <tx:method name="*" propagation="SUPPORTS" read-only="true" rollback-for="java.lang.Exception"/> -->
	</tx:attributes>
</tx:advice>
 
<!-- aop，切点-->
<aop:config>
	<!-- 管理的通知是上面定义的通知，
		com.ssm.service.impl.*.*(..)：切点是com.ssm.service.impl包下的所有类
		的所有方法，(..)不管参数是什么  
	-->
	<aop:advisor advice-ref="txAdvice" pointcut="execution(* net.linxingyang.*.service.impl.*.*(..))" />
</aop:config>

</beans>