<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.linxingyang.diary.mapper.BillMapper" >
  <resultMap id="BaseResultMap" type="net.linxingyang.diary.pojo.Bill" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="bill_date" property="billDate" jdbcType="TIMESTAMP" />
    <result column="cost_type" property="costType" jdbcType="INTEGER" />
    <result column="cost_money" property="costMoney" jdbcType="DECIMAL" />
    <result column="pay_type" property="payType" jdbcType="INTEGER" />
    <result column="pay_way" property="payWay" jdbcType="INTEGER" />
    <result column="use_to" property="useTo" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="modify_date" property="modifyDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, bill_date, cost_type, cost_money, pay_type, pay_way, use_to, create_date, modify_date
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="net.linxingyang.diary.pojo.BillExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bill
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limit != null" >
      <if test="offset != null" >
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null" >
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bill
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from bill
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="net.linxingyang.diary.pojo.BillExample" >
    delete from bill
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="net.linxingyang.diary.pojo.Bill" >
    insert into bill (id, bill_date, cost_type, 
      cost_money, pay_type, pay_way, 
      use_to, create_date, modify_date
      )
    values (#{id,jdbcType=INTEGER}, #{billDate,jdbcType=TIMESTAMP}, #{costType,jdbcType=INTEGER}, 
      #{costMoney,jdbcType=DECIMAL}, #{payType,jdbcType=INTEGER}, #{payWay,jdbcType=INTEGER}, 
      #{useTo,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{modifyDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="net.linxingyang.diary.pojo.Bill" >
    insert into bill
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="billDate != null" >
        bill_date,
      </if>
      <if test="costType != null" >
        cost_type,
      </if>
      <if test="costMoney != null" >
        cost_money,
      </if>
      <if test="payType != null" >
        pay_type,
      </if>
      <if test="payWay != null" >
        pay_way,
      </if>
      <if test="useTo != null" >
        use_to,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="modifyDate != null" >
        modify_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="billDate != null" >
        #{billDate,jdbcType=TIMESTAMP},
      </if>
      <if test="costType != null" >
        #{costType,jdbcType=INTEGER},
      </if>
      <if test="costMoney != null" >
        #{costMoney,jdbcType=DECIMAL},
      </if>
      <if test="payType != null" >
        #{payType,jdbcType=INTEGER},
      </if>
      <if test="payWay != null" >
        #{payWay,jdbcType=INTEGER},
      </if>
      <if test="useTo != null" >
        #{useTo,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDate != null" >
        #{modifyDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="net.linxingyang.diary.pojo.BillExample" resultType="java.lang.Integer" >
    select count(*) from bill
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bill
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.billDate != null" >
        bill_date = #{record.billDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.costType != null" >
        cost_type = #{record.costType,jdbcType=INTEGER},
      </if>
      <if test="record.costMoney != null" >
        cost_money = #{record.costMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.payType != null" >
        pay_type = #{record.payType,jdbcType=INTEGER},
      </if>
      <if test="record.payWay != null" >
        pay_way = #{record.payWay,jdbcType=INTEGER},
      </if>
      <if test="record.useTo != null" >
        use_to = #{record.useTo,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyDate != null" >
        modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bill
    set id = #{record.id,jdbcType=INTEGER},
      bill_date = #{record.billDate,jdbcType=TIMESTAMP},
      cost_type = #{record.costType,jdbcType=INTEGER},
      cost_money = #{record.costMoney,jdbcType=DECIMAL},
      pay_type = #{record.payType,jdbcType=INTEGER},
      pay_way = #{record.payWay,jdbcType=INTEGER},
      use_to = #{record.useTo,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      modify_date = #{record.modifyDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="net.linxingyang.diary.pojo.Bill" >
    update bill
    <set >
      <if test="billDate != null" >
        bill_date = #{billDate,jdbcType=TIMESTAMP},
      </if>
      <if test="costType != null" >
        cost_type = #{costType,jdbcType=INTEGER},
      </if>
      <if test="costMoney != null" >
        cost_money = #{costMoney,jdbcType=DECIMAL},
      </if>
      <if test="payType != null" >
        pay_type = #{payType,jdbcType=INTEGER},
      </if>
      <if test="payWay != null" >
        pay_way = #{payWay,jdbcType=INTEGER},
      </if>
      <if test="useTo != null" >
        use_to = #{useTo,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDate != null" >
        modify_date = #{modifyDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.linxingyang.diary.pojo.Bill" >
    update bill
    set bill_date = #{billDate,jdbcType=TIMESTAMP},
      cost_type = #{costType,jdbcType=INTEGER},
      cost_money = #{costMoney,jdbcType=DECIMAL},
      pay_type = #{payType,jdbcType=INTEGER},
      pay_way = #{payWay,jdbcType=INTEGER},
      use_to = #{useTo,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      modify_date = #{modifyDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>