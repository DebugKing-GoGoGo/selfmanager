package net.linxingyang.personal.controller;import net.linxingyang.common.utils.LightPageBean;import net.linxingyang.common.vo.CommonVo;import net.linxingyang.common.vo.ResponseCode;import net.linxingyang.personal.exception.PersonalException;import net.linxingyang.personal.pojo.BigThing;import net.linxingyang.personal.qo.BigThingQo;import net.linxingyang.personal.service.BigThingService;import net.linxingyang.personal.vo.BigThingVo;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.ResponseBody;@Controller@RequestMapping(value="bigThing")public class BigThingController {    private static Logger log = LoggerFactory.getLogger(BigThingController.class);    @Autowired    private BigThingService bigThingService;    /**     * 查询大事件列表     *      * @param qo     * @return     */    @RequestMapping("/listBigThing")    public @ResponseBody LightPageBean<BigThingVo> listBigThing(BigThingQo qo) {        LightPageBean<BigThingVo> vo = new LightPageBean<BigThingVo>();                 try {            vo = bigThingService.selectByQo2(qo);            vo.setCode(ResponseCode.SUCCESS);            vo.setMsg("查询大事件成功!");        } catch (PersonalException e) {            vo.setCode(ResponseCode.ERROR_INPUT);            vo.setMsg(e.getMessage());            log.info("查询大事件失败：" + vo.getCode() + ":" + e.getMessage());        } catch (Exception e) {            vo.setCode(ResponseCode.INTERNAL_ERROR);            vo.setMsg("内部错误!");            log.info("查询大事件失败：" + vo.getCode() + "：" + e.getMessage());        }        return vo;    }    /**     * 查询大事件     *      * @param id      * @return     */    @RequestMapping("/queryBigThing")    public @ResponseBody CommonVo queryBigThing(Integer id) {        CommonVo vo = new CommonVo();                try {            vo.setResultObject(bigThingService.selectVoById(id));            vo.setCode(ResponseCode.SUCCESS);            vo.setMessage("查询大事件成功!");        } catch (PersonalException e) {            vo.setCode(ResponseCode.ERROR_INPUT);            vo.setMessage(e.getMessage());            log.info("查询大事件失败：" + vo.getCode() + ":" + e.getMessage());        } catch (Exception e) {            vo.setCode(ResponseCode.INTERNAL_ERROR);            vo.setMessage("内部错误!");            log.info("查询大事件失败：" + vo.getCode() + "：" + e.getMessage());        }        return vo;    }        /**     * 更新大事件     *      * @param bigThing     * @return     */    @RequestMapping("/modifyBigThing")    public @ResponseBody CommonVo modifyBigThing(BigThing bigThing) {        CommonVo vo = new CommonVo();                try {            bigThingService.update(bigThing);            vo.setCode(ResponseCode.SUCCESS);            vo.setMessage("更新大事件成功!");            log.info("更新大事件成功");        } catch (PersonalException e) {            vo.setCode(ResponseCode.ERROR_INPUT);            vo.setMessage(e.getMessage());            log.info("更新大事件失败：" + vo.getCode() + ":" + e.getMessage());        } catch (Exception e) {            vo.setCode(ResponseCode.INTERNAL_ERROR);            vo.setMessage("内部错误!");            log.info("更新大事件失败：" + vo.getCode() + "：" + e.getMessage());        }        return vo;    }    /**     * 添加大事件     *      * @param bigThing 大事件     * @return CommonVo 处理结果     */    @RequestMapping("/addBigThing")    public @ResponseBody CommonVo addBigThing(BigThing bigThing) {        CommonVo vo = new CommonVo();                try {            bigThingService.insert(bigThing);            vo.setCode(ResponseCode.SUCCESS);            vo.setMessage("添加大事件成功!");            log.info("添加大事件成功");        } catch (PersonalException e) {            vo.setCode(ResponseCode.ERROR_INPUT);            vo.setMessage(e.getMessage());            log.info("添加大事件失败：" + vo.getCode() + ":" + e.getMessage());        } catch (Exception e) {            vo.setCode(ResponseCode.INTERNAL_ERROR);            vo.setMessage("内部错误!");            log.info("添加大事件失败：" + vo.getCode() + "：" + e.getMessage());        }        return vo;    }}