package net.linxingyang.personal.controller;import net.linxingyang.common.utils.LightPageBean;import net.linxingyang.common.vo.CommonVo;import net.linxingyang.common.vo.ResponseCode;import net.linxingyang.personal.exception.PersonalException;import net.linxingyang.personal.pojo.PersonWord;import net.linxingyang.personal.qo.PersonWordQo;import net.linxingyang.personal.service.PersonWordService;import net.linxingyang.personal.vo.PersonWordVo;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.ResponseBody;@Controller@RequestMapping(value="personWord")public class PersonWordController {    private static Logger log = LoggerFactory.getLogger(PersonWordController.class);    @Autowired    private PersonWordService personWordService;    /**     * 查询密语列表     *      * @param qo     * @return     */    @RequestMapping("/listPersonWord")    public @ResponseBody LightPageBean<PersonWordVo> listPersonWord(PersonWordQo qo) {        LightPageBean<PersonWordVo> vo = new LightPageBean<PersonWordVo>();                 try {            vo = personWordService.selectByQo2(qo);            vo.setCode(ResponseCode.SUCCESS);            vo.setMsg("查询密语成功!");        } catch (PersonalException e) {            vo.setCode(ResponseCode.ERROR_INPUT);            vo.setMsg(e.getMessage());            log.info("查询密语失败：" + vo.getCode() + ":" + e.getMessage());        } catch (Exception e) {            vo.setCode(ResponseCode.INTERNAL_ERROR);            vo.setMsg("内部错误!");            log.info("查询密语失败：" + vo.getCode() + "：" + e.getMessage());        }        return vo;    }    /**     * 查询密语     *      * @param id      * @return     */    @RequestMapping("/queryPersonWord")    public @ResponseBody CommonVo queryPersonWord(Integer id) {        CommonVo vo = new CommonVo();                try {            vo.setResultObject(personWordService.selectVoById(id));            vo.setCode(ResponseCode.SUCCESS);            vo.setMessage("查询密语成功!");        } catch (PersonalException e) {            vo.setCode(ResponseCode.ERROR_INPUT);            vo.setMessage(e.getMessage());            log.info("查询密语失败：" + vo.getCode() + ":" + e.getMessage());        } catch (Exception e) {            vo.setCode(ResponseCode.INTERNAL_ERROR);            vo.setMessage("内部错误!");            log.info("查询密语失败：" + vo.getCode() + "：" + e.getMessage());        }        return vo;    }        /**     * 更新密语     *      * @param personWord     * @return     */    @RequestMapping("/modifyPersonWord")    public @ResponseBody CommonVo modifyPersonWord(PersonWord personWord) {        CommonVo vo = new CommonVo();                try {            personWordService.update(personWord);            vo.setCode(ResponseCode.SUCCESS);            vo.setMessage("更新密语成功!");            log.info("更新密语成功");        } catch (PersonalException e) {            vo.setCode(ResponseCode.ERROR_INPUT);            vo.setMessage(e.getMessage());            log.info("更新密语失败：" + vo.getCode() + ":" + e.getMessage());        } catch (Exception e) {            vo.setCode(ResponseCode.INTERNAL_ERROR);            vo.setMessage("内部错误!");            log.info("更新密语失败：" + vo.getCode() + "：" + e.getMessage());        }        return vo;    }    /**     * 添加密语     *      * @param personWord 密语     * @return CommonVo 处理结果     */    @RequestMapping("/addPersonWord")    public @ResponseBody CommonVo addPersonWord(PersonWord personWord) {        CommonVo vo = new CommonVo();                try {            personWordService.insert(personWord);            vo.setCode(ResponseCode.SUCCESS);            vo.setMessage("添加密语成功!");            log.info("添加密语成功");        } catch (PersonalException e) {            vo.setCode(ResponseCode.ERROR_INPUT);            vo.setMessage(e.getMessage());            log.info("添加密语失败：" + vo.getCode() + ":" + e.getMessage());        } catch (Exception e) {            vo.setCode(ResponseCode.INTERNAL_ERROR);            vo.setMessage("内部错误!");            log.info("添加密语失败：" + vo.getCode() + "：" + e.getMessage());        }        return vo;    }}