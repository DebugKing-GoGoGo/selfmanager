package net.linxingyang.personal.controller;import net.linxingyang.common.utils.LightPageBean;import net.linxingyang.common.vo.CommonVo;import net.linxingyang.common.vo.ResponseCode;import net.linxingyang.personal.exception.PersonalException;import net.linxingyang.personal.pojo.Person;import net.linxingyang.personal.qo.PersonQo;import net.linxingyang.personal.service.PersonService;import net.linxingyang.personal.vo.PersonVo;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.ResponseBody;@Controller@RequestMapping(value="person")public class PersonController {    private static Logger log = LoggerFactory.getLogger(PersonController.class);    @Autowired    private PersonService personService;    /**     * 查询认识的人列表     *      * @param qo     * @return     */    @RequestMapping("/listPerson")    public @ResponseBody LightPageBean<PersonVo> listTask(PersonQo qo) {        LightPageBean<PersonVo> vo = new LightPageBean<PersonVo>();                 try {            vo = personService.selectByQo2(qo);            vo.setCode(ResponseCode.SUCCESS);            vo.setMsg("查询认识的人成功!");        } catch (PersonalException e) {            vo.setCode(ResponseCode.ERROR_INPUT);            vo.setMsg(e.getMessage());            log.info("查询认识的人失败：" + vo.getCode() + ":" + e.getMessage());        } catch (Exception e) {            vo.setCode(ResponseCode.INTERNAL_ERROR);            vo.setMsg("内部错误!");            log.info("查询认识的人失败：" + vo.getCode() + "：" + e.getMessage());        }        return vo;    }    /**     * 查询认识的人     *      * @param id      * @return     */    @RequestMapping("/queryPerson")    public @ResponseBody CommonVo queryPerson(Integer id) {        CommonVo vo = new CommonVo();                try {            vo.setResultObject(personService.selectVoById(id));            vo.setCode(ResponseCode.SUCCESS);            vo.setMessage("查询认识的人成功!");        } catch (PersonalException e) {            vo.setCode(ResponseCode.ERROR_INPUT);            vo.setMessage(e.getMessage());            log.info("查询认识的人失败：" + vo.getCode() + ":" + e.getMessage());        } catch (Exception e) {            vo.setCode(ResponseCode.INTERNAL_ERROR);            vo.setMessage("内部错误!");            log.info("查询认识的人失败：" + vo.getCode() + "：" + e.getMessage());        }        return vo;    }        /**     * 更新认识的人     *      * @param person     * @return     */    @RequestMapping("/modifyPerson")    public @ResponseBody CommonVo modifyPerson(Person person) {        CommonVo vo = new CommonVo();                try {            personService.update(person);            vo.setCode(ResponseCode.SUCCESS);            vo.setMessage("更新认识的人成功!");            log.info("更新认识的人成功");        } catch (PersonalException e) {            vo.setCode(ResponseCode.ERROR_INPUT);            vo.setMessage(e.getMessage());            log.info("更新认识的人失败：" + vo.getCode() + ":" + e.getMessage());        } catch (Exception e) {            vo.setCode(ResponseCode.INTERNAL_ERROR);            vo.setMessage("内部错误!");            log.info("更新认识的人失败：" + vo.getCode() + "：" + e.getMessage());        }        return vo;    }    /**     * 添加认识的人     *      * @param person 认识的人     * @return CommonVo 处理结果     */    @RequestMapping("/addPerson")    public @ResponseBody CommonVo addTask(Person person) {        CommonVo vo = new CommonVo();                try {            personService.insert(person);            vo.setCode(ResponseCode.SUCCESS);            vo.setMessage("添加认识的人成功!");            log.info("添加认识的人成功");        } catch (PersonalException e) {            vo.setCode(ResponseCode.ERROR_INPUT);            vo.setMessage(e.getMessage());            log.info("添加认识的人失败：" + vo.getCode() + ":" + e.getMessage());        } catch (Exception e) {            vo.setCode(ResponseCode.INTERNAL_ERROR);            vo.setMessage("内部错误!");            log.info("添加认识的人失败：" + vo.getCode() + "：" + e.getMessage());        }        return vo;    }}