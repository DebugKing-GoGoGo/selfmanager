package net.linxingyang.diary.controller;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.ResponseBody;import net.linxingyang.common.vo.CommonVo;import net.linxingyang.common.vo.ResponseCode;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import net.linxingyang.common.utils.LightPageBean;import net.linxingyang.diary.pojo.FutureTaskDetail;import net.linxingyang.diary.vo.FutureTaskDetailVo;import net.linxingyang.diary.qo.FutureTaskDetailQo;import net.linxingyang.diary.service.FutureTaskDetailService;import net.linxingyang.diary.exception.DiaryException;@Controller@RequestMapping(value="futureTaskDetail")public class FutureTaskDetailController {    private static Logger log = LoggerFactory.getLogger(FutureTaskDetailController.class);    @Autowired    private FutureTaskDetailService futureTaskDetailService;    /**     * 查询长期任务明细列表     *      * @param qo     * @return     */    @RequestMapping("/listFutureTaskDetail")    public @ResponseBody LightPageBean<FutureTaskDetailVo> listFutureTaskDetail(FutureTaskDetailQo qo) {        LightPageBean<FutureTaskDetailVo> vo = new LightPageBean<FutureTaskDetailVo>();                 try {            vo = futureTaskDetailService.selectByQo2(qo);            vo.setCode(ResponseCode.SUCCESS);            vo.setMsg("查询长期任务明细成功!");        } catch (DiaryException e) {            vo.setCode(ResponseCode.ERROR_INPUT);            vo.setMsg(e.getMessage());            log.info("查询长期任务明细失败：" + vo.getCode() + ":" + e.getMessage());        } catch (Exception e) {            vo.setCode(ResponseCode.INTERNAL_ERROR);            vo.setMsg("内部错误!");            log.info("查询长期任务明细失败：" + vo.getCode() + "：" + e.getMessage());        }        return vo;    }    /**     * 查询长期任务明细     *      * @param id      * @return     */    @RequestMapping("/queryFutureTaskDetail")    public @ResponseBody CommonVo queryFutureTaskDetail(Integer id) {        CommonVo vo = new CommonVo();                try {            vo.setResultObject(futureTaskDetailService.selectVoById(id));            vo.setCode(ResponseCode.SUCCESS);            vo.setMessage("查询长期任务明细成功!");        } catch (DiaryException e) {            vo.setCode(ResponseCode.ERROR_INPUT);            vo.setMessage(e.getMessage());            log.info("查询长期任务明细失败：" + vo.getCode() + ":" + e.getMessage());        } catch (Exception e) {            vo.setCode(ResponseCode.INTERNAL_ERROR);            vo.setMessage("内部错误!");            log.info("查询长期任务明细失败：" + vo.getCode() + "：" + e.getMessage());        }        return vo;    }        /**     * 更新长期任务明细     *      * @param futureTaskDetail     * @return     */    @RequestMapping("/modifyFutureTaskDetail")    public @ResponseBody CommonVo modifyFutureTaskDetail(FutureTaskDetail futureTaskDetail) {        CommonVo vo = new CommonVo();                try {            futureTaskDetailService.update(futureTaskDetail);            vo.setCode(ResponseCode.SUCCESS);            vo.setMessage("更新长期任务明细成功!");            log.info("更新长期任务明细成功");        } catch (DiaryException e) {            vo.setCode(ResponseCode.ERROR_INPUT);            vo.setMessage(e.getMessage());            log.info("更新长期任务明细失败：" + vo.getCode() + ":" + e.getMessage());        } catch (Exception e) {            vo.setCode(ResponseCode.INTERNAL_ERROR);            vo.setMessage("内部错误!");            log.info("更新长期任务明细失败：" + vo.getCode() + "：" + e.getMessage());        }        return vo;    }    /**     * 添加长期任务明细     *      * @param futureTaskDetail 长期任务明细     * @return CommonVo 处理结果     */    @RequestMapping("/addFutureTaskDetail")    public @ResponseBody CommonVo addFutureTaskDetail(FutureTaskDetail futureTaskDetail) {        CommonVo vo = new CommonVo();                try {            futureTaskDetailService.insert(futureTaskDetail);            vo.setCode(ResponseCode.SUCCESS);            vo.setMessage("添加长期任务明细成功!");            log.info("添加长期任务明细成功");        } catch (DiaryException e) {            vo.setCode(ResponseCode.ERROR_INPUT);            vo.setMessage(e.getMessage());            log.info("添加长期任务明细失败：" + vo.getCode() + ":" + e.getMessage());        } catch (Exception e) {            vo.setCode(ResponseCode.INTERNAL_ERROR);            vo.setMessage("内部错误!");            log.info("添加长期任务明细失败：" + vo.getCode() + "：" + e.getMessage());        }        return vo;    }}