package net.linxingyang.diary.controller;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.ResponseBody;import net.linxingyang.common.vo.CommonVo;import net.linxingyang.common.vo.ResponseCode;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import net.linxingyang.common.utils.LightPageBean;import net.linxingyang.diary.pojo.FutureTask;import net.linxingyang.diary.vo.FutureTaskVo;import net.linxingyang.diary.qo.FutureTaskQo;import net.linxingyang.diary.service.FutureTaskService;import net.linxingyang.diary.exception.DiaryException;@Controller@RequestMapping(value="futureTask")public class FutureTaskController {    private static Logger log = LoggerFactory.getLogger(FutureTaskController.class);    @Autowired    private FutureTaskService futureTaskService;    /**     * 查询长期计划列表     *      * @param qo     * @return     */    @RequestMapping("/listFutureTask")    public @ResponseBody LightPageBean<FutureTaskVo> listFutureTask(FutureTaskQo qo) {        LightPageBean<FutureTaskVo> vo = new LightPageBean<FutureTaskVo>();                 try {            vo = futureTaskService.selectByQo2(qo);            vo.setCode(ResponseCode.SUCCESS);            vo.setMsg("查询长期计划成功!");        } catch (DiaryException e) {            vo.setCode(ResponseCode.ERROR_INPUT);            vo.setMsg(e.getMessage());            log.info("查询长期计划失败：" + vo.getCode() + ":" + e.getMessage());        } catch (Exception e) {            vo.setCode(ResponseCode.INTERNAL_ERROR);            vo.setMsg("内部错误!");            log.info("查询长期计划失败：" + vo.getCode() + "：" + e.getMessage());        }        return vo;    }    /**     * 查询长期计划     *      * @param id      * @return     */    @RequestMapping("/queryFutureTask")    public @ResponseBody CommonVo queryFutureTask(Integer id) {        CommonVo vo = new CommonVo();                try {            vo.setResultObject(futureTaskService.selectVoById(id));            vo.setCode(ResponseCode.SUCCESS);            vo.setMessage("查询长期计划成功!");        } catch (DiaryException e) {            vo.setCode(ResponseCode.ERROR_INPUT);            vo.setMessage(e.getMessage());            log.info("查询长期计划失败：" + vo.getCode() + ":" + e.getMessage());        } catch (Exception e) {            vo.setCode(ResponseCode.INTERNAL_ERROR);            vo.setMessage("内部错误!");            log.info("查询长期计划失败：" + vo.getCode() + "：" + e.getMessage());        }        return vo;    }        /**     * 更新长期计划     *      * @param futureTask     * @return     */    @RequestMapping("/modifyFutureTask")    public @ResponseBody CommonVo modifyFutureTask(FutureTask futureTask) {        CommonVo vo = new CommonVo();                try {            futureTaskService.update(futureTask);            vo.setCode(ResponseCode.SUCCESS);            vo.setMessage("更新长期计划成功!");            log.info("更新长期计划成功");        } catch (DiaryException e) {            vo.setCode(ResponseCode.ERROR_INPUT);            vo.setMessage(e.getMessage());            log.info("更新长期计划失败：" + vo.getCode() + ":" + e.getMessage());        } catch (Exception e) {            vo.setCode(ResponseCode.INTERNAL_ERROR);            vo.setMessage("内部错误!");            log.info("更新长期计划失败：" + vo.getCode() + "：" + e.getMessage());        }        return vo;    }    /**     * 添加长期计划     *      * @param futureTask 长期计划     * @return CommonVo 处理结果     */    @RequestMapping("/addFutureTask")    public @ResponseBody CommonVo addFutureTask(FutureTask futureTask) {        CommonVo vo = new CommonVo();                try {            futureTaskService.insert(futureTask);            vo.setCode(ResponseCode.SUCCESS);            vo.setMessage("添加长期计划成功!");            log.info("添加长期计划成功");        } catch (DiaryException e) {            vo.setCode(ResponseCode.ERROR_INPUT);            vo.setMessage(e.getMessage());            log.info("添加长期计划失败：" + vo.getCode() + ":" + e.getMessage());        } catch (Exception e) {            vo.setCode(ResponseCode.INTERNAL_ERROR);            vo.setMessage("内部错误!");            log.info("添加长期计划失败：" + vo.getCode() + "：" + e.getMessage());        }        return vo;    }}