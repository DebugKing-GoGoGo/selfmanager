package net.linxingyang.diary.controller;import net.linxingyang.common.utils.DateUtils;import net.linxingyang.common.utils.LightPageBean;import net.linxingyang.common.vo.CommonVo;import net.linxingyang.common.vo.ResponseCode;import net.linxingyang.diary.exception.DiaryException;import net.linxingyang.diary.pojo.Task;import net.linxingyang.diary.pojo.TaskPlan;import net.linxingyang.diary.qo.TaskPlanQo;import net.linxingyang.diary.service.TaskPlanService;import net.linxingyang.diary.service.TaskService;import net.linxingyang.diary.vo.TaskPlanVo;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.ResponseBody;@Controller@RequestMapping(value="taskPlan")public class TaskPlanController {    private static Logger log = LoggerFactory.getLogger(TaskPlanController.class);    @Autowired    private TaskPlanService taskPlanService;    @Autowired    private TaskService taskService;    @RequestMapping("/listTaskPlan")    public @ResponseBody LightPageBean<TaskPlanVo> listTaskPlan(TaskPlanQo qo) {    	System.out.println(qo);    	LightPageBean<TaskPlanVo> vo = new LightPageBean<TaskPlanVo>();     	    	try {    		vo = taskPlanService.selectByQo2(qo);    		vo.setCode(ResponseCode.SUCCESS);    		vo.setMsg("查询安排成功!");    	} catch (DiaryException e) {    		vo.setCode(ResponseCode.ERROR_INPUT);    		vo.setMsg(e.getMessage());    		log.info("查询安排失败：" + vo.getCode() + ":" + e.getMessage());		} catch (Exception e) {			vo.setCode(ResponseCode.INTERNAL_ERROR);			vo.setMsg("内部错误!");			log.info("查询安排失败：" + vo.getCode() + "：" + e.getMessage());		}    	return vo;    }        @RequestMapping("/queryTaskPlan")    public @ResponseBody CommonVo queryTaskPlan(Integer id) {        CommonVo vo = new CommonVo();                try {            vo.setResultObject(taskPlanService.selectVoById(id));            vo.setCode(ResponseCode.SUCCESS);            vo.setMessage("查询任务成功!");        } catch (DiaryException e) {            vo.setCode(ResponseCode.ERROR_INPUT);            vo.setMessage(e.getMessage());            log.info("查询任务失败：" + vo.getCode() + ":" + e.getMessage());        } catch (Exception e) {            vo.setCode(ResponseCode.INTERNAL_ERROR);            vo.setMessage("内部错误!");            log.info("查询任务失败：" + vo.getCode() + "：" + e.getMessage());        }        return vo;    }        /**     * 更新任务计划     *      * @param taskPlan     * @return     */    @RequestMapping("/modifyTaskPlan")    public @ResponseBody CommonVo modifyTaskPlan(TaskPlan taskPlan) {    	CommonVo vo = new CommonVo();    	    	try {    		taskPlanService.update(taskPlan);    		vo.setCode(ResponseCode.SUCCESS);    		vo.setMessage("更新任务计划成功!");    		log.info("更新任务计划成功");    	} catch (DiaryException e) {    		vo.setCode(ResponseCode.ERROR_INPUT);    		vo.setMessage(e.getMessage());    		log.info("更新任务计划失败：" + vo.getCode() + ":" + e.getMessage());    	} catch (Exception e) {    		vo.setCode(ResponseCode.INTERNAL_ERROR);    		vo.setMessage("内部错误!");    		log.info("更新任务计划失败：" + vo.getCode() + "：" + e.getMessage());    	}    	return vo;    }    /**     * 更新任务计划     *      * @param taskPlan     * @return     */    @RequestMapping("/modifyTaskPlanWithDoDateStr")    public @ResponseBody CommonVo modifyTaskPlanWithDoDateStr(TaskPlan taskPlan, String doDateStr) {        CommonVo vo = new CommonVo();                try {        	taskPlan.setDoDate(DateUtils.FULL_SDF.parse(doDateStr));            taskPlanService.update(taskPlan);            vo.setCode(ResponseCode.SUCCESS);            vo.setMessage("更新任务计划成功!");            log.info("更新任务计划成功");        } catch (DiaryException e) {            vo.setCode(ResponseCode.ERROR_INPUT);            vo.setMessage(e.getMessage());            log.info("更新任务计划失败：" + vo.getCode() + ":" + e.getMessage());        } catch (Exception e) {            vo.setCode(ResponseCode.INTERNAL_ERROR);            vo.setMessage("内部错误!");            log.info("更新任务计划失败：" + vo.getCode() + "：" + e.getMessage());        }        return vo;    }    /**     * 添加任务计划     *      * @param taskPlan 任务计划     * @return CommonVo 处理结果     */    @RequestMapping("/addTaskPlan")    public @ResponseBody CommonVo addTaskPlan(TaskPlan taskPlan, String dateRange, String doTime) {        CommonVo vo = new CommonVo();                try {        	System.out.println(dateRange);        	System.out.println(doTime);            taskPlanService.insert(taskPlan, dateRange, doTime);            vo.setCode(ResponseCode.SUCCESS);            vo.setMessage("添加任务计划成功!");            log.info("添加任务计划成功");         } catch (DiaryException e) {            vo.setCode(ResponseCode.ERROR_INPUT);            vo.setMessage(e.getMessage());            log.info("添加任务计划失败：" + vo.getCode() + ":" + e.getMessage());        } catch (Exception e) {            vo.setCode(ResponseCode.INTERNAL_ERROR);            vo.setMessage("内部错误!");            log.info("添加任务计划失败：" + vo.getCode() + "：" + e.getMessage());        }        return vo;    }    /**     * 添加任务和任务计划     *      * @param taskPlan 任务计划     * @return CommonVo 处理结果     */    @RequestMapping("addTaskAndTaskPlan")    public @ResponseBody CommonVo addTaskAndTaskPlan(TaskPlan taskPlan, String dateRange, String doTime, Task task) {    	CommonVo vo = new CommonVo();    	    	try {    		System.out.println(dateRange);    		System.out.println(doTime);    		taskService.insert(task);    		taskPlan.setTaskId(task.getId());    		taskPlanService.insert(taskPlan, dateRange, doTime);    		vo.setCode(ResponseCode.SUCCESS);    		vo.setMessage("添加任务计划成功!");    		log.info("添加任务计划成功");    	} catch (DiaryException e) {    		vo.setCode(ResponseCode.ERROR_INPUT);    		vo.setMessage(e.getMessage());    		log.info("添加任务计划失败：" + vo.getCode() + ":" + e.getMessage());    	} catch (Exception e) {    		vo.setCode(ResponseCode.INTERNAL_ERROR);    		vo.setMessage("内部错误!");    		log.info("添加任务计划失败：" + vo.getCode() + "：" + e.getMessage());    	}    	return vo;    }}