package net.linxingyang.diary.controller;import java.util.HashSet;import net.linxingyang.common.utils.LightPageBean;import net.linxingyang.common.vo.CommonVo;import net.linxingyang.common.vo.ResponseCode;import net.linxingyang.diary.exception.DiaryException;import net.linxingyang.diary.pojo.Bill;import net.linxingyang.diary.qo.BillQo;import net.linxingyang.diary.service.BillService;import net.linxingyang.diary.vo.BillVo;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestParam;import org.springframework.web.bind.annotation.ResponseBody;@Controller@RequestMapping(value="bill")public class BillController {    private static Logger log = LoggerFactory.getLogger(BillController.class);    @Autowired    private BillService billService;    /**     * 查询账单列表     *      * @param qo     * @return     */    @RequestMapping("/listBill")    public @ResponseBody LightPageBean<BillVo> listBill(BillQo qo, @RequestParam(value="multiCheckbox[]", required=false) HashSet<Integer> configIds) {        LightPageBean<BillVo> vo = new LightPageBean<BillVo>();         try {        	qo.setConfigIds(configIds);            vo = billService.selectByQo2(qo);            vo.setCode(ResponseCode.SUCCESS);            vo.setMsg("查询账单成功!");        } catch (DiaryException e) {            vo.setCode(ResponseCode.ERROR_INPUT);            vo.setMsg(e.getMessage());            log.info("查询账单失败：" + vo.getCode() + ":" + e.getMessage());        } catch (Exception e) {            vo.setCode(ResponseCode.INTERNAL_ERROR);            vo.setMsg("内部错误!");            log.info("查询账单失败：" + vo.getCode() + "：" + e.getMessage());        }        return vo;    }    /**     * 查询账单     *      * @param id      * @return     */    @RequestMapping("/queryBill")    public @ResponseBody CommonVo queryBill(Integer id) {        CommonVo vo = new CommonVo();                try {            vo.setResultObject(billService.selectVoById(id));            vo.setCode(ResponseCode.SUCCESS);            vo.setMessage("查询账单成功!");        } catch (DiaryException e) {            vo.setCode(ResponseCode.ERROR_INPUT);            vo.setMessage(e.getMessage());            log.info("查询账单失败：" + vo.getCode() + ":" + e.getMessage());        } catch (Exception e) {            vo.setCode(ResponseCode.INTERNAL_ERROR);            vo.setMessage("内部错误!");            log.info("查询账单失败：" + vo.getCode() + "：" + e.getMessage());        }        return vo;    }        /**     * 更新账单     *      * @param bill     * @return     */    @RequestMapping("/modifyBill")    public @ResponseBody CommonVo modifyBill(Bill bill) {        CommonVo vo = new CommonVo();                try {            billService.update(bill);            vo.setCode(ResponseCode.SUCCESS);            vo.setMessage("更新账单成功!");            log.info("更新账单成功");        } catch (DiaryException e) {            vo.setCode(ResponseCode.ERROR_INPUT);            vo.setMessage(e.getMessage());            log.info("更新账单失败：" + vo.getCode() + ":" + e.getMessage());        } catch (Exception e) {            vo.setCode(ResponseCode.INTERNAL_ERROR);            vo.setMessage("内部错误!");            log.info("更新账单失败：" + vo.getCode() + "：" + e.getMessage());        }        return vo;    }    /**     * 添加账单     *      * @param bill 账单     * @return CommonVo 处理结果     */    @RequestMapping("/addBill")    public @ResponseBody CommonVo addBill(Bill bill) {        CommonVo vo = new CommonVo();                try {            billService.insert(bill);            vo.setCode(ResponseCode.SUCCESS);            vo.setMessage("添加账单成功!");            log.info("添加账单成功");        } catch (DiaryException e) {            vo.setCode(ResponseCode.ERROR_INPUT);            vo.setMessage(e.getMessage());            log.info("添加账单失败：" + vo.getCode() + ":" + e.getMessage());        } catch (Exception e) {            vo.setCode(ResponseCode.INTERNAL_ERROR);            vo.setMessage("内部错误!");            log.info("添加账单失败：" + vo.getCode() + "：" + e.getMessage());        }        return vo;    }}