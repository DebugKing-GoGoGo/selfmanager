package net.linxingyang.diary.controller;import net.linxingyang.common.utils.LightPageBean;import net.linxingyang.common.vo.CommonVo;import net.linxingyang.common.vo.ResponseCode;import net.linxingyang.diary.exception.DiaryException;import net.linxingyang.diary.pojo.Task;import net.linxingyang.diary.qo.TaskQo;import net.linxingyang.diary.service.TaskService;import net.linxingyang.diary.vo.TaskVo;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.ResponseBody;@Controller@RequestMapping(value="task")public class TaskController {    private static Logger log = LoggerFactory.getLogger(TaskController.class);    @Autowired    private TaskService taskService;        @RequestMapping("/queryTask")    public @ResponseBody CommonVo queryTask(Integer id) {    	CommonVo vo = new CommonVo();    	    	try {    		vo.setResultObject(taskService.selectVoById(id));    		vo.setCode(ResponseCode.SUCCESS);    		vo.setMessage("查询任务成功!");    	} catch (DiaryException e) {    		vo.setCode(ResponseCode.ERROR_INPUT);    		vo.setMessage(e.getMessage());    		log.info("查询任务失败：" + vo.getCode() + ":" + e.getMessage());		} catch (Exception e) {			vo.setCode(ResponseCode.INTERNAL_ERROR);			vo.setMessage("内部错误!");			log.info("查询任务失败：" + vo.getCode() + "：" + e.getMessage());		}    	return vo;    }        /**     * 更新任务     *      * @param task     * @return     */    @RequestMapping("/modifyTask")    public @ResponseBody CommonVo modifyTask(Task task) {    	CommonVo vo = new CommonVo();    	    	try {    		taskService.update(task);    		vo.setCode(ResponseCode.SUCCESS);    		vo.setMessage("更新任务成功!");    		log.info("更新任务成功");    	} catch (DiaryException e) {    		vo.setCode(ResponseCode.ERROR_INPUT);    		vo.setMessage(e.getMessage());    		log.info("更新任务失败：" + vo.getCode() + ":" + e.getMessage());		} catch (Exception e) {			vo.setCode(ResponseCode.INTERNAL_ERROR);			vo.setMessage("内部错误!");			log.info("更新任务失败：" + vo.getCode() + "：" + e.getMessage());		}    	return vo;    }            @RequestMapping("/listTask")    public @ResponseBody LightPageBean<TaskVo> listTask(TaskQo qo) {    	System.out.println(qo);    	    	LightPageBean<TaskVo> vo = new LightPageBean<TaskVo>();     	try {    		// vo = diaryService.selectByQo2(qo);    		vo = taskService.selectByQo2(qo);    		vo.setCode(ResponseCode.SUCCESS);    		vo.setMsg("查询任务成功!");    	} catch (DiaryException e) {    		vo.setCode(ResponseCode.ERROR_INPUT);    		vo.setMsg(e.getMessage());    		log.info("查询任务失败：" + vo.getCode() + ":" + e.getMessage());		} catch (Exception e) {			vo.setCode(ResponseCode.INTERNAL_ERROR);			vo.setMsg("内部错误!");			log.info("查询任务失败：" + vo.getCode() + "：" + e.getMessage());		}    	return vo;    }            /**     * 添加任务     *      * @param task 任务     * @return CommonVo 处理结果     */    @RequestMapping("/addTask")    public @ResponseBody CommonVo addTask(Task task) {    	CommonVo vo = new CommonVo();    	    	try {    		taskService.insert(task);    		vo.setCode(ResponseCode.SUCCESS);    		vo.setMessage("添加任务成功!");    		log.info("添加任务成功");    	} catch (DiaryException e) {    		vo.setCode(ResponseCode.ERROR_INPUT);    		vo.setMessage(e.getMessage());    		log.info("添加任务失败：" + vo.getCode() + ":" + e.getMessage());		} catch (Exception e) {			vo.setCode(ResponseCode.INTERNAL_ERROR);			vo.setMessage("内部错误!");			log.info("添加任务失败：" + vo.getCode() + "：" + e.getMessage());		}    	return vo;    }}